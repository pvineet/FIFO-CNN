// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module read_inputs_Block_p (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        im_3_data_i,
        im_3_data_o,
        im_3_data_o_ap_vld,
        compressed_in,
        rd_zeros_0_i,
        rd_zeros_0_o,
        rd_zeros_0_o_ap_vld,
        in0_TDATA,
        im_0_data,
        im_0_data_ap_vld,
        in0_TLAST,
        im_0_last_V,
        im_0_last_V_ap_vld,
        in1_TDATA,
        im_1_data,
        im_1_data_ap_vld,
        in1_TLAST,
        im_1_last_V,
        im_1_last_V_ap_vld,
        in2_TDATA,
        in2_TLAST,
        in3_TDATA,
        in3_TLAST,
        im_3_last_V,
        im_3_last_V_ap_vld,
        rd_zero_cnt_0_i,
        rd_zero_cnt_0_o,
        rd_zero_cnt_0_o_ap_vld,
        rd_zeros_1_i,
        rd_zeros_1_o,
        rd_zeros_1_o_ap_vld,
        im_2_last_V,
        im_2_last_V_ap_vld,
        rd_zero_cnt_1_i,
        rd_zero_cnt_1_o,
        rd_zero_cnt_1_o_ap_vld,
        im_2_data,
        im_2_data_ap_vld,
        rd_zeros_2_i,
        rd_zeros_2_o,
        rd_zeros_2_o_ap_vld,
        rd_zero_cnt_2_i,
        rd_zero_cnt_2_o,
        rd_zero_cnt_2_o_ap_vld,
        rd_zeros_3_i,
        rd_zeros_3_o,
        rd_zeros_3_o_ap_vld,
        rd_zero_cnt_3_i,
        rd_zero_cnt_3_o,
        rd_zero_cnt_3_o_ap_vld
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] im_3_data_i;
output  [15:0] im_3_data_o;
output   im_3_data_o_ap_vld;
input  [0:0] compressed_in;
input  [0:0] rd_zeros_0_i;
output  [0:0] rd_zeros_0_o;
output   rd_zeros_0_o_ap_vld;
input  [15:0] in0_TDATA;
output  [15:0] im_0_data;
output   im_0_data_ap_vld;
input  [0:0] in0_TLAST;
output  [0:0] im_0_last_V;
output   im_0_last_V_ap_vld;
input  [15:0] in1_TDATA;
output  [15:0] im_1_data;
output   im_1_data_ap_vld;
input  [0:0] in1_TLAST;
output  [0:0] im_1_last_V;
output   im_1_last_V_ap_vld;
input  [15:0] in2_TDATA;
input  [0:0] in2_TLAST;
input  [15:0] in3_TDATA;
input  [0:0] in3_TLAST;
output  [0:0] im_3_last_V;
output   im_3_last_V_ap_vld;
input  [31:0] rd_zero_cnt_0_i;
output  [31:0] rd_zero_cnt_0_o;
output   rd_zero_cnt_0_o_ap_vld;
input  [0:0] rd_zeros_1_i;
output  [0:0] rd_zeros_1_o;
output   rd_zeros_1_o_ap_vld;
output  [0:0] im_2_last_V;
output   im_2_last_V_ap_vld;
input  [31:0] rd_zero_cnt_1_i;
output  [31:0] rd_zero_cnt_1_o;
output   rd_zero_cnt_1_o_ap_vld;
output  [15:0] im_2_data;
output   im_2_data_ap_vld;
input  [0:0] rd_zeros_2_i;
output  [0:0] rd_zeros_2_o;
output   rd_zeros_2_o_ap_vld;
input  [31:0] rd_zero_cnt_2_i;
output  [31:0] rd_zero_cnt_2_o;
output   rd_zero_cnt_2_o_ap_vld;
input  [0:0] rd_zeros_3_i;
output  [0:0] rd_zeros_3_o;
output   rd_zeros_3_o_ap_vld;
input  [31:0] rd_zero_cnt_3_i;
output  [31:0] rd_zero_cnt_3_o;
output   rd_zero_cnt_3_o_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] im_3_data_o;
reg im_3_data_o_ap_vld;
reg[0:0] rd_zeros_0_o;
reg rd_zeros_0_o_ap_vld;
reg[15:0] im_0_data;
reg im_0_data_ap_vld;
reg[0:0] im_0_last_V;
reg im_0_last_V_ap_vld;
reg[15:0] im_1_data;
reg im_1_data_ap_vld;
reg[0:0] im_1_last_V;
reg im_1_last_V_ap_vld;
reg[0:0] im_3_last_V;
reg im_3_last_V_ap_vld;
reg[31:0] rd_zero_cnt_0_o;
reg rd_zero_cnt_0_o_ap_vld;
reg[0:0] rd_zeros_1_o;
reg rd_zeros_1_o_ap_vld;
reg[0:0] im_2_last_V;
reg im_2_last_V_ap_vld;
reg[31:0] rd_zero_cnt_1_o;
reg rd_zero_cnt_1_o_ap_vld;
reg[15:0] im_2_data;
reg im_2_data_ap_vld;
reg[0:0] rd_zeros_2_o;
reg rd_zeros_2_o_ap_vld;
reg[31:0] rd_zero_cnt_2_o;
reg rd_zero_cnt_2_o_ap_vld;
reg[0:0] rd_zeros_3_o;
reg rd_zeros_3_o_ap_vld;
reg[31:0] rd_zero_cnt_3_o;
reg rd_zero_cnt_3_o_ap_vld;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] compressed_in_read_read_fu_122_p2;
reg    ap_block_state1;
wire   [0:0] rd_zeros_0_read_read_fu_208_p2;
wire   [0:0] rd_zeros_1_read_read_fu_237_p2;
wire    ap_CS_fsm_state2;
wire   [0:0] rd_zeros_2_read_read_fu_266_p2;
wire    ap_CS_fsm_state3;
reg   [0:0] in2_last_V_val1_reg_1233;
reg   [15:0] in2_data_val1_reg_1238;
wire   [0:0] icmp_ln37_2_fu_858_p2;
wire   [0:0] rd_zeros_3_read_read_fu_294_p2;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln37_3_fu_1016_p2;
reg   [0:0] ap_phi_mux_im_data2_flag_0_phi_fu_342_p10;
reg   [0:0] im_data2_flag_0_reg_337;
wire   [0:0] icmp_ln53_2_fu_864_p2;
wire   [0:0] icmp_ln57_2_fu_880_p2;
reg   [15:0] ap_phi_mux_im_data2_new_0_phi_fu_364_p10;
reg   [15:0] im_data2_new_0_reg_360;
reg   [0:0] ap_phi_mux_im_last_V5_flag_0_phi_fu_386_p10;
reg   [0:0] im_last_V5_flag_0_reg_381;
reg   [0:0] ap_phi_mux_im_last_V5_new_0_phi_fu_408_p10;
reg   [0:0] im_last_V5_new_0_reg_404;
reg   [0:0] ap_phi_mux_im_data2_flag_4_phi_fu_428_p8;
reg   [0:0] im_data2_flag_4_reg_424;
wire    ap_CS_fsm_state5;
reg   [15:0] ap_phi_mux_im_data2_new_4_phi_fu_445_p8;
reg   [15:0] im_data2_new_4_reg_442;
reg   [0:0] ap_phi_mux_im_last_V5_flag_2_phi_fu_461_p8;
reg   [0:0] im_last_V5_flag_2_reg_457;
reg   [0:0] ap_phi_mux_im_last_V5_new_2_phi_fu_478_p8;
reg   [0:0] im_last_V5_new_2_reg_475;
wire   [0:0] icmp_ln37_fu_542_p2;
reg   [15:0] im_0_data_preg;
wire   [0:0] icmp_ln53_fu_548_p2;
wire   [0:0] icmp_ln57_fu_564_p2;
reg   [0:0] im_0_last_V_preg;
wire   [0:0] icmp_ln37_1_fu_700_p2;
reg   [15:0] im_1_data_preg;
wire   [0:0] icmp_ln53_1_fu_706_p2;
wire   [0:0] icmp_ln57_1_fu_722_p2;
reg   [0:0] im_1_last_V_preg;
reg   [15:0] im_3_data_o_preg;
wire   [0:0] icmp_ln53_3_fu_1022_p2;
wire   [0:0] icmp_ln57_3_fu_1038_p2;
reg   [0:0] im_3_last_V_preg;
wire   [31:0] add_ln59_fu_570_p2;
reg   [31:0] rd_zero_cnt_0_o_preg;
wire   [31:0] val_V_fu_691_p3;
wire   [0:0] grp_fu_490_p2;
wire   [31:0] add_ln59_1_fu_728_p2;
reg   [31:0] rd_zero_cnt_1_o_preg;
wire   [31:0] val_V_1_fu_849_p3;
wire   [31:0] add_ln59_2_fu_886_p2;
reg   [31:0] rd_zero_cnt_2_o_preg;
wire   [31:0] val_V_2_fu_1007_p3;
wire   [31:0] add_ln59_3_fu_1044_p2;
reg   [31:0] rd_zero_cnt_3_o_preg;
wire   [31:0] val_V_3_fu_1164_p3;
reg   [0:0] im_2_last_V_preg;
reg   [15:0] im_2_data_preg;
reg   [15:0] grp_fu_490_p0;
wire   [30:0] tmp_7_fu_554_p4;
wire   [15:0] p_Val2_s_fu_577_p1;
wire   [9:0] tmp_V_1_fu_591_p1;
wire   [11:0] mantissa_V_fu_595_p4;
wire   [4:0] tmp_V_fu_581_p4;
wire   [5:0] zext_ln659_fu_609_p1;
wire   [5:0] add_ln659_fu_613_p2;
wire   [4:0] sub_ln1311_fu_627_p2;
wire   [0:0] isNeg_fu_619_p3;
wire  signed [5:0] sext_ln1311_fu_633_p1;
wire  signed [5:0] ush_fu_637_p3;
wire  signed [31:0] sext_ln1311_1_fu_645_p1;
wire  signed [11:0] sext_ln1311_2_fu_649_p1;
wire   [52:0] zext_ln682_fu_605_p1;
wire   [52:0] zext_ln1287_fu_653_p1;
wire   [11:0] r_V_fu_657_p2;
wire   [0:0] tmp_5_fu_669_p3;
wire   [52:0] r_V_1_fu_663_p2;
wire   [31:0] zext_ln662_fu_677_p1;
wire   [31:0] tmp_4_fu_681_p4;
wire   [30:0] tmp_12_fu_712_p4;
wire   [15:0] p_Val2_4_fu_735_p1;
wire   [9:0] tmp_V_3_fu_749_p1;
wire   [11:0] mantissa_V_1_fu_753_p4;
wire   [4:0] tmp_V_2_fu_739_p4;
wire   [5:0] zext_ln659_1_fu_767_p1;
wire   [5:0] add_ln659_1_fu_771_p2;
wire   [4:0] sub_ln1311_1_fu_785_p2;
wire   [0:0] isNeg_1_fu_777_p3;
wire  signed [5:0] sext_ln1311_3_fu_791_p1;
wire  signed [5:0] ush_1_fu_795_p3;
wire  signed [31:0] sext_ln1311_4_fu_803_p1;
wire  signed [11:0] sext_ln1311_5_fu_807_p1;
wire   [52:0] zext_ln682_1_fu_763_p1;
wire   [52:0] zext_ln1287_1_fu_811_p1;
wire   [11:0] r_V_2_fu_815_p2;
wire   [0:0] tmp_11_fu_827_p3;
wire   [52:0] r_V_3_fu_821_p2;
wire   [31:0] zext_ln662_1_fu_835_p1;
wire   [31:0] tmp_6_fu_839_p4;
wire   [30:0] tmp_15_fu_870_p4;
wire   [15:0] p_Val2_8_fu_893_p1;
wire   [9:0] tmp_V_5_fu_907_p1;
wire   [11:0] mantissa_V_2_fu_911_p4;
wire   [4:0] tmp_V_4_fu_897_p4;
wire   [5:0] zext_ln659_2_fu_925_p1;
wire   [5:0] add_ln659_2_fu_929_p2;
wire   [4:0] sub_ln1311_2_fu_943_p2;
wire   [0:0] isNeg_2_fu_935_p3;
wire  signed [5:0] sext_ln1311_6_fu_949_p1;
wire  signed [5:0] ush_2_fu_953_p3;
wire  signed [31:0] sext_ln1311_7_fu_961_p1;
wire  signed [11:0] sext_ln1311_8_fu_965_p1;
wire   [52:0] zext_ln682_2_fu_921_p1;
wire   [52:0] zext_ln1287_2_fu_969_p1;
wire   [11:0] r_V_4_fu_973_p2;
wire   [0:0] tmp_14_fu_985_p3;
wire   [52:0] r_V_5_fu_979_p2;
wire   [31:0] zext_ln662_2_fu_993_p1;
wire   [31:0] tmp_8_fu_997_p4;
wire   [30:0] tmp_18_fu_1028_p4;
wire   [15:0] p_Val2_12_fu_1051_p1;
wire   [9:0] tmp_V_7_fu_1064_p1;
wire   [11:0] mantissa_V_3_fu_1068_p4;
wire   [4:0] tmp_V_6_fu_1054_p4;
wire   [5:0] zext_ln659_3_fu_1082_p1;
wire   [5:0] add_ln659_3_fu_1086_p2;
wire   [4:0] sub_ln1311_3_fu_1100_p2;
wire   [0:0] isNeg_3_fu_1092_p3;
wire  signed [5:0] sext_ln1311_9_fu_1106_p1;
wire  signed [5:0] ush_3_fu_1110_p3;
wire  signed [31:0] sext_ln1311_10_fu_1118_p1;
wire  signed [11:0] sext_ln1311_11_fu_1122_p1;
wire   [52:0] zext_ln682_3_fu_1078_p1;
wire   [52:0] zext_ln1287_3_fu_1126_p1;
wire   [11:0] r_V_6_fu_1130_p2;
wire   [0:0] tmp_17_fu_1142_p3;
wire   [52:0] r_V_7_fu_1136_p2;
wire   [31:0] zext_ln662_3_fu_1150_p1;
wire   [31:0] tmp_1_fu_1154_p4;
reg    grp_fu_490_ce;
reg    ap_predicate_op63_hcmp_state1;
reg   [4:0] ap_NS_fsm;
reg    ap_condition_786;
reg    ap_condition_274;
reg    ap_condition_793;
reg    ap_condition_798;
reg    ap_condition_803;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 im_0_data_preg = 16'd0;
#0 im_0_last_V_preg = 1'd0;
#0 im_1_data_preg = 16'd0;
#0 im_1_last_V_preg = 1'd0;
#0 im_3_data_o_preg = 16'd0;
#0 im_3_last_V_preg = 1'd0;
#0 rd_zero_cnt_0_o_preg = 32'd0;
#0 rd_zero_cnt_1_o_preg = 32'd0;
#0 rd_zero_cnt_2_o_preg = 32'd0;
#0 rd_zero_cnt_3_o_preg = 32'd0;
#0 im_2_last_V_preg = 1'd0;
#0 im_2_data_preg = 16'd0;
end

dataflow_half_hcmbkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 1 ))
dataflow_half_hcmbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_490_p0),
    .din1(16'd0),
    .ce(grp_fu_490_ce),
    .opcode(5'd1),
    .dout(grp_fu_490_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        im_0_data_preg <= 16'd0;
    end else begin
        if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (rd_zeros_0_i == 1'd0) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (compressed_in_read_read_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
            im_0_data_preg <= in0_TDATA;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        im_0_last_V_preg <= 1'd0;
    end else begin
        if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (icmp_ln37_fu_542_p2 == 1'd1) & (rd_zeros_0_read_read_fu_208_p2 == 1'd1) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (rd_zeros_0_i == 1'd0) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (compressed_in_read_read_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
            im_0_last_V_preg <= in0_TLAST;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        im_1_data_preg <= 16'd0;
    end else begin
        if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (compressed_in_read_read_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((rd_zeros_1_read_read_fu_237_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
            im_1_data_preg <= in1_TDATA;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        im_1_last_V_preg <= 1'd0;
    end else begin
        if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (compressed_in_read_read_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln37_1_fu_700_p2 == 1'd1) & (rd_zeros_1_read_read_fu_237_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((rd_zeros_1_read_read_fu_237_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
            im_1_last_V_preg <= in1_TLAST;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        im_2_data_preg <= 16'd0;
    end else begin
        if (((ap_phi_mux_im_data2_flag_4_phi_fu_428_p8 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
            im_2_data_preg <= ap_phi_mux_im_data2_new_4_phi_fu_445_p8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        im_2_last_V_preg <= 1'd0;
    end else begin
        if (((ap_phi_mux_im_last_V5_flag_2_phi_fu_461_p8 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
            im_2_last_V_preg <= ap_phi_mux_im_last_V5_new_2_phi_fu_478_p8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        im_3_data_o_preg <= 16'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (compressed_in_read_read_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
            im_3_data_o_preg <= in3_TDATA;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        im_3_last_V_preg <= 1'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (compressed_in_read_read_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
            im_3_last_V_preg <= in3_TLAST;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        rd_zero_cnt_0_o_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_condition_274)) begin
            if ((icmp_ln37_fu_542_p2 == 1'd1)) begin
                rd_zero_cnt_0_o_preg <= val_V_fu_691_p3;
            end else if ((1'b1 == ap_condition_786)) begin
                rd_zero_cnt_0_o_preg <= add_ln59_fu_570_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        rd_zero_cnt_1_o_preg <= 32'd0;
    end else begin
        if (((rd_zeros_1_read_read_fu_237_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            if ((icmp_ln37_1_fu_700_p2 == 1'd1)) begin
                rd_zero_cnt_1_o_preg <= val_V_1_fu_849_p3;
            end else if ((1'b1 == ap_condition_793)) begin
                rd_zero_cnt_1_o_preg <= add_ln59_1_fu_728_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        rd_zero_cnt_2_o_preg <= 32'd0;
    end else begin
        if (((rd_zeros_2_read_read_fu_266_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            if ((icmp_ln37_2_fu_858_p2 == 1'd1)) begin
                rd_zero_cnt_2_o_preg <= val_V_2_fu_1007_p3;
            end else if ((1'b1 == ap_condition_798)) begin
                rd_zero_cnt_2_o_preg <= add_ln59_2_fu_886_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        rd_zero_cnt_3_o_preg <= 32'd0;
    end else begin
        if (((rd_zeros_3_read_read_fu_294_p2 == 1'd1) & (icmp_ln57_3_fu_1038_p2 == 1'd0) & (icmp_ln53_3_fu_1022_p2 == 1'd0) & (icmp_ln37_3_fu_1016_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
            rd_zero_cnt_3_o_preg <= add_ln59_3_fu_1044_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln57_2_fu_880_p2 == 1'd1) & (rd_zeros_2_read_read_fu_266_p2 == 1'd1) & (icmp_ln53_2_fu_864_p2 == 1'd0) & (icmp_ln37_2_fu_858_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln53_2_fu_864_p2 == 1'd1) & (rd_zeros_2_read_read_fu_266_p2 == 1'd1) & (icmp_ln37_2_fu_858_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        im_data2_flag_0_reg_337 <= 1'd0;
    end else if ((((rd_zeros_2_read_read_fu_266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((rd_zeros_2_read_read_fu_266_p2 == 1'd1) & (icmp_ln57_2_fu_880_p2 == 1'd0) & (icmp_ln53_2_fu_864_p2 == 1'd0) & (icmp_ln37_2_fu_858_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln37_2_fu_858_p2 == 1'd1) & (rd_zeros_2_read_read_fu_266_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        im_data2_flag_0_reg_337 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((rd_zeros_3_read_read_fu_294_p2 == 1'd1) & (icmp_ln37_3_fu_1016_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        im_data2_flag_4_reg_424 <= ap_phi_mux_im_data2_flag_0_phi_fu_342_p10;
    end else if ((((rd_zeros_3_i == 1'd0) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (compressed_in_read_read_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln37_3_fu_1016_p2 == 1'd1) & (rd_zeros_3_read_read_fu_294_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
        im_data2_flag_4_reg_424 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((rd_zeros_2_read_read_fu_266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        im_data2_new_0_reg_360 <= in2_data_val1_reg_1238;
    end else if ((((icmp_ln57_2_fu_880_p2 == 1'd1) & (rd_zeros_2_read_read_fu_266_p2 == 1'd1) & (icmp_ln53_2_fu_864_p2 == 1'd0) & (icmp_ln37_2_fu_858_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((rd_zeros_2_read_read_fu_266_p2 == 1'd1) & (icmp_ln57_2_fu_880_p2 == 1'd0) & (icmp_ln53_2_fu_864_p2 == 1'd0) & (icmp_ln37_2_fu_858_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln53_2_fu_864_p2 == 1'd1) & (rd_zeros_2_read_read_fu_266_p2 == 1'd1) & (icmp_ln37_2_fu_858_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln37_2_fu_858_p2 == 1'd1) & (rd_zeros_2_read_read_fu_266_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        im_data2_new_0_reg_360 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((rd_zeros_3_read_read_fu_294_p2 == 1'd1) & (icmp_ln37_3_fu_1016_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        im_data2_new_4_reg_442 <= ap_phi_mux_im_data2_new_0_phi_fu_364_p10;
    end else if ((((rd_zeros_3_i == 1'd0) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln37_3_fu_1016_p2 == 1'd1) & (rd_zeros_3_read_read_fu_294_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
        im_data2_new_4_reg_442 <= in3_TDATA;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (compressed_in_read_read_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        im_data2_new_4_reg_442 <= in2_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln57_2_fu_880_p2 == 1'd1) & (rd_zeros_2_read_read_fu_266_p2 == 1'd1) & (icmp_ln53_2_fu_864_p2 == 1'd0) & (icmp_ln37_2_fu_858_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((rd_zeros_2_read_read_fu_266_p2 == 1'd1) & (icmp_ln57_2_fu_880_p2 == 1'd0) & (icmp_ln53_2_fu_864_p2 == 1'd0) & (icmp_ln37_2_fu_858_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln53_2_fu_864_p2 == 1'd1) & (rd_zeros_2_read_read_fu_266_p2 == 1'd1) & (icmp_ln37_2_fu_858_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        im_last_V5_flag_0_reg_381 <= 1'd0;
    end else if ((((rd_zeros_2_read_read_fu_266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln37_2_fu_858_p2 == 1'd1) & (rd_zeros_2_read_read_fu_266_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        im_last_V5_flag_0_reg_381 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((rd_zeros_3_read_read_fu_294_p2 == 1'd1) & (icmp_ln37_3_fu_1016_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        im_last_V5_flag_2_reg_457 <= ap_phi_mux_im_last_V5_flag_0_phi_fu_386_p10;
    end else if ((((rd_zeros_3_i == 1'd0) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (compressed_in_read_read_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln37_3_fu_1016_p2 == 1'd1) & (rd_zeros_3_read_read_fu_294_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
        im_last_V5_flag_2_reg_457 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((rd_zeros_2_read_read_fu_266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        im_last_V5_new_0_reg_404 <= in2_last_V_val1_reg_1233;
    end else if (((icmp_ln37_2_fu_858_p2 == 1'd1) & (rd_zeros_2_read_read_fu_266_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        im_last_V5_new_0_reg_404 <= in2_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if (((rd_zeros_3_read_read_fu_294_p2 == 1'd1) & (icmp_ln37_3_fu_1016_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        im_last_V5_new_2_reg_475 <= ap_phi_mux_im_last_V5_new_0_phi_fu_408_p10;
    end else if ((((rd_zeros_3_i == 1'd0) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln37_3_fu_1016_p2 == 1'd1) & (rd_zeros_3_read_read_fu_294_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
        im_last_V5_new_2_reg_475 <= in3_TLAST;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (compressed_in_read_read_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        im_last_V5_new_2_reg_475 <= in2_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if (((rd_zeros_2_read_read_fu_266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        in2_data_val1_reg_1238 <= in2_TDATA;
        in2_last_V_val1_reg_1233 <= in2_TLAST;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((rd_zeros_2_read_read_fu_266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_phi_mux_im_data2_flag_0_phi_fu_342_p10 = 1'd1;
    end else begin
        ap_phi_mux_im_data2_flag_0_phi_fu_342_p10 = im_data2_flag_0_reg_337;
    end
end

always @ (*) begin
    if (((rd_zeros_3_i == 1'd0) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_phi_mux_im_data2_flag_4_phi_fu_428_p8 = 1'd1;
    end else begin
        ap_phi_mux_im_data2_flag_4_phi_fu_428_p8 = im_data2_flag_4_reg_424;
    end
end

always @ (*) begin
    if (((rd_zeros_2_read_read_fu_266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_phi_mux_im_data2_new_0_phi_fu_364_p10 = in2_data_val1_reg_1238;
    end else begin
        ap_phi_mux_im_data2_new_0_phi_fu_364_p10 = im_data2_new_0_reg_360;
    end
end

always @ (*) begin
    if (((rd_zeros_3_i == 1'd0) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_phi_mux_im_data2_new_4_phi_fu_445_p8 = in3_TDATA;
    end else begin
        ap_phi_mux_im_data2_new_4_phi_fu_445_p8 = im_data2_new_4_reg_442;
    end
end

always @ (*) begin
    if (((rd_zeros_2_read_read_fu_266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_phi_mux_im_last_V5_flag_0_phi_fu_386_p10 = 1'd1;
    end else begin
        ap_phi_mux_im_last_V5_flag_0_phi_fu_386_p10 = im_last_V5_flag_0_reg_381;
    end
end

always @ (*) begin
    if (((rd_zeros_3_i == 1'd0) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_phi_mux_im_last_V5_flag_2_phi_fu_461_p8 = 1'd1;
    end else begin
        ap_phi_mux_im_last_V5_flag_2_phi_fu_461_p8 = im_last_V5_flag_2_reg_457;
    end
end

always @ (*) begin
    if (((rd_zeros_2_read_read_fu_266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_phi_mux_im_last_V5_new_0_phi_fu_408_p10 = in2_last_V_val1_reg_1233;
    end else begin
        ap_phi_mux_im_last_V5_new_0_phi_fu_408_p10 = im_last_V5_new_0_reg_404;
    end
end

always @ (*) begin
    if (((rd_zeros_3_i == 1'd0) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_phi_mux_im_last_V5_new_2_phi_fu_478_p8 = in3_TLAST;
    end else begin
        ap_phi_mux_im_last_V5_new_2_phi_fu_478_p8 = im_last_V5_new_2_reg_475;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        grp_fu_490_ce = 1'b1;
    end else begin
        grp_fu_490_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_490_p0 = im_3_data_i;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_490_p0 = in2_TDATA;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_490_p0 = in1_TDATA;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_490_p0 = in0_TDATA;
    end else begin
        grp_fu_490_p0 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (rd_zeros_0_read_read_fu_208_p2 == 1'd1) & (icmp_ln57_fu_564_p2 == 1'd0) & (icmp_ln53_fu_548_p2 == 1'd0) & (icmp_ln37_fu_542_p2 == 1'd0) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (icmp_ln37_fu_542_p2 == 1'd1) & (rd_zeros_0_read_read_fu_208_p2 == 1'd1) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state1)))) begin
        im_0_data = 16'd0;
    end else if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (rd_zeros_0_i == 1'd0) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (compressed_in_read_read_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        im_0_data = in0_TDATA;
    end else begin
        im_0_data = im_0_data_preg;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (rd_zeros_0_read_read_fu_208_p2 == 1'd1) & (icmp_ln57_fu_564_p2 == 1'd0) & (icmp_ln53_fu_548_p2 == 1'd0) & (icmp_ln37_fu_542_p2 == 1'd0) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (icmp_ln37_fu_542_p2 == 1'd1) & (rd_zeros_0_read_read_fu_208_p2 == 1'd1) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (rd_zeros_0_i == 1'd0) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (compressed_in_read_read_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        im_0_data_ap_vld = 1'b1;
    end else begin
        im_0_data_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (icmp_ln37_fu_542_p2 == 1'd1) & (rd_zeros_0_read_read_fu_208_p2 == 1'd1) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (rd_zeros_0_i == 1'd0) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (compressed_in_read_read_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        im_0_last_V = in0_TLAST;
    end else begin
        im_0_last_V = im_0_last_V_preg;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (icmp_ln37_fu_542_p2 == 1'd1) & (rd_zeros_0_read_read_fu_208_p2 == 1'd1) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (rd_zeros_0_i == 1'd0) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (compressed_in_read_read_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        im_0_last_V_ap_vld = 1'b1;
    end else begin
        im_0_last_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((rd_zeros_1_read_read_fu_237_p2 == 1'd1) & (icmp_ln57_1_fu_722_p2 == 1'd0) & (icmp_ln53_1_fu_706_p2 == 1'd0) & (icmp_ln37_1_fu_700_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln37_1_fu_700_p2 == 1'd1) & (rd_zeros_1_read_read_fu_237_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        im_1_data = 16'd0;
    end else if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (compressed_in_read_read_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((rd_zeros_1_read_read_fu_237_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        im_1_data = in1_TDATA;
    end else begin
        im_1_data = im_1_data_preg;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (compressed_in_read_read_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((rd_zeros_1_read_read_fu_237_p2 == 1'd1) & (icmp_ln57_1_fu_722_p2 == 1'd0) & (icmp_ln53_1_fu_706_p2 == 1'd0) & (icmp_ln37_1_fu_700_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln37_1_fu_700_p2 == 1'd1) & (rd_zeros_1_read_read_fu_237_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((rd_zeros_1_read_read_fu_237_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        im_1_data_ap_vld = 1'b1;
    end else begin
        im_1_data_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (compressed_in_read_read_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln37_1_fu_700_p2 == 1'd1) & (rd_zeros_1_read_read_fu_237_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((rd_zeros_1_read_read_fu_237_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        im_1_last_V = in1_TLAST;
    end else begin
        im_1_last_V = im_1_last_V_preg;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (compressed_in_read_read_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln37_1_fu_700_p2 == 1'd1) & (rd_zeros_1_read_read_fu_237_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((rd_zeros_1_read_read_fu_237_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        im_1_last_V_ap_vld = 1'b1;
    end else begin
        im_1_last_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_im_data2_flag_4_phi_fu_428_p8 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        im_2_data = ap_phi_mux_im_data2_new_4_phi_fu_445_p8;
    end else begin
        im_2_data = im_2_data_preg;
    end
end

always @ (*) begin
    if (((ap_phi_mux_im_data2_flag_4_phi_fu_428_p8 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        im_2_data_ap_vld = 1'b1;
    end else begin
        im_2_data_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_im_last_V5_flag_2_phi_fu_461_p8 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        im_2_last_V = ap_phi_mux_im_last_V5_new_2_phi_fu_478_p8;
    end else begin
        im_2_last_V = im_2_last_V_preg;
    end
end

always @ (*) begin
    if (((ap_phi_mux_im_last_V5_flag_2_phi_fu_461_p8 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        im_2_last_V_ap_vld = 1'b1;
    end else begin
        im_2_last_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((rd_zeros_3_read_read_fu_294_p2 == 1'd1) & (icmp_ln57_3_fu_1038_p2 == 1'd0) & (icmp_ln53_3_fu_1022_p2 == 1'd0) & (icmp_ln37_3_fu_1016_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln37_3_fu_1016_p2 == 1'd1) & (rd_zeros_3_read_read_fu_294_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
        im_3_data_o = 16'd0;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (compressed_in_read_read_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        im_3_data_o = in3_TDATA;
    end else begin
        im_3_data_o = im_3_data_o_preg;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (compressed_in_read_read_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((rd_zeros_3_read_read_fu_294_p2 == 1'd1) & (icmp_ln57_3_fu_1038_p2 == 1'd0) & (icmp_ln53_3_fu_1022_p2 == 1'd0) & (icmp_ln37_3_fu_1016_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln37_3_fu_1016_p2 == 1'd1) & (rd_zeros_3_read_read_fu_294_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
        im_3_data_o_ap_vld = 1'b1;
    end else begin
        im_3_data_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (compressed_in_read_read_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        im_3_last_V = in3_TLAST;
    end else begin
        im_3_last_V = im_3_last_V_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (compressed_in_read_read_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        im_3_last_V_ap_vld = 1'b1;
    end else begin
        im_3_last_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_274)) begin
        if ((icmp_ln37_fu_542_p2 == 1'd1)) begin
            rd_zero_cnt_0_o = val_V_fu_691_p3;
        end else if (((icmp_ln53_fu_548_p2 == 1'd1) & (icmp_ln37_fu_542_p2 == 1'd0))) begin
            rd_zero_cnt_0_o = 32'd0;
        end else if ((1'b1 == ap_condition_786)) begin
            rd_zero_cnt_0_o = add_ln59_fu_570_p2;
        end else begin
            rd_zero_cnt_0_o = rd_zero_cnt_0_o_preg;
        end
    end else begin
        rd_zero_cnt_0_o = rd_zero_cnt_0_o_preg;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (icmp_ln53_fu_548_p2 == 1'd1) & (rd_zeros_0_read_read_fu_208_p2 == 1'd1) & (icmp_ln37_fu_542_p2 == 1'd0) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (rd_zeros_0_read_read_fu_208_p2 == 1'd1) & (icmp_ln57_fu_564_p2 == 1'd0) & (icmp_ln53_fu_548_p2 == 1'd0) & (icmp_ln37_fu_542_p2 == 1'd0) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (icmp_ln37_fu_542_p2 == 1'd1) & (rd_zeros_0_read_read_fu_208_p2 == 1'd1) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state1)))) begin
        rd_zero_cnt_0_o_ap_vld = 1'b1;
    end else begin
        rd_zero_cnt_0_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((rd_zeros_1_read_read_fu_237_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        if ((icmp_ln37_1_fu_700_p2 == 1'd1)) begin
            rd_zero_cnt_1_o = val_V_1_fu_849_p3;
        end else if (((icmp_ln53_1_fu_706_p2 == 1'd1) & (icmp_ln37_1_fu_700_p2 == 1'd0))) begin
            rd_zero_cnt_1_o = 32'd0;
        end else if ((1'b1 == ap_condition_793)) begin
            rd_zero_cnt_1_o = add_ln59_1_fu_728_p2;
        end else begin
            rd_zero_cnt_1_o = rd_zero_cnt_1_o_preg;
        end
    end else begin
        rd_zero_cnt_1_o = rd_zero_cnt_1_o_preg;
    end
end

always @ (*) begin
    if ((((icmp_ln53_1_fu_706_p2 == 1'd1) & (rd_zeros_1_read_read_fu_237_p2 == 1'd1) & (icmp_ln37_1_fu_700_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((rd_zeros_1_read_read_fu_237_p2 == 1'd1) & (icmp_ln57_1_fu_722_p2 == 1'd0) & (icmp_ln53_1_fu_706_p2 == 1'd0) & (icmp_ln37_1_fu_700_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln37_1_fu_700_p2 == 1'd1) & (rd_zeros_1_read_read_fu_237_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        rd_zero_cnt_1_o_ap_vld = 1'b1;
    end else begin
        rd_zero_cnt_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((rd_zeros_2_read_read_fu_266_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        if ((icmp_ln37_2_fu_858_p2 == 1'd1)) begin
            rd_zero_cnt_2_o = val_V_2_fu_1007_p3;
        end else if (((icmp_ln53_2_fu_864_p2 == 1'd1) & (icmp_ln37_2_fu_858_p2 == 1'd0))) begin
            rd_zero_cnt_2_o = 32'd0;
        end else if ((1'b1 == ap_condition_798)) begin
            rd_zero_cnt_2_o = add_ln59_2_fu_886_p2;
        end else begin
            rd_zero_cnt_2_o = rd_zero_cnt_2_o_preg;
        end
    end else begin
        rd_zero_cnt_2_o = rd_zero_cnt_2_o_preg;
    end
end

always @ (*) begin
    if ((((rd_zeros_2_read_read_fu_266_p2 == 1'd1) & (icmp_ln57_2_fu_880_p2 == 1'd0) & (icmp_ln53_2_fu_864_p2 == 1'd0) & (icmp_ln37_2_fu_858_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln53_2_fu_864_p2 == 1'd1) & (rd_zeros_2_read_read_fu_266_p2 == 1'd1) & (icmp_ln37_2_fu_858_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln37_2_fu_858_p2 == 1'd1) & (rd_zeros_2_read_read_fu_266_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        rd_zero_cnt_2_o_ap_vld = 1'b1;
    end else begin
        rd_zero_cnt_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((rd_zeros_3_read_read_fu_294_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        if ((icmp_ln37_3_fu_1016_p2 == 1'd1)) begin
            rd_zero_cnt_3_o = val_V_3_fu_1164_p3;
        end else if (((icmp_ln53_3_fu_1022_p2 == 1'd1) & (icmp_ln37_3_fu_1016_p2 == 1'd0))) begin
            rd_zero_cnt_3_o = 32'd0;
        end else if ((1'b1 == ap_condition_803)) begin
            rd_zero_cnt_3_o = add_ln59_3_fu_1044_p2;
        end else begin
            rd_zero_cnt_3_o = rd_zero_cnt_3_o_preg;
        end
    end else begin
        rd_zero_cnt_3_o = rd_zero_cnt_3_o_preg;
    end
end

always @ (*) begin
    if ((((icmp_ln53_3_fu_1022_p2 == 1'd1) & (rd_zeros_3_read_read_fu_294_p2 == 1'd1) & (icmp_ln37_3_fu_1016_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((rd_zeros_3_read_read_fu_294_p2 == 1'd1) & (icmp_ln57_3_fu_1038_p2 == 1'd0) & (icmp_ln53_3_fu_1022_p2 == 1'd0) & (icmp_ln37_3_fu_1016_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln37_3_fu_1016_p2 == 1'd1) & (rd_zeros_3_read_read_fu_294_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
        rd_zero_cnt_3_o_ap_vld = 1'b1;
    end else begin
        rd_zero_cnt_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((rd_zeros_0_i == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        rd_zeros_0_o = grp_fu_490_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (icmp_ln53_fu_548_p2 == 1'd1) & (rd_zeros_0_read_read_fu_208_p2 == 1'd1) & (icmp_ln37_fu_542_p2 == 1'd0) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        rd_zeros_0_o = 1'd0;
    end else begin
        rd_zeros_0_o = rd_zeros_0_i;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (icmp_ln53_fu_548_p2 == 1'd1) & (rd_zeros_0_read_read_fu_208_p2 == 1'd1) & (icmp_ln37_fu_542_p2 == 1'd0) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | ((rd_zeros_0_i == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        rd_zeros_0_o_ap_vld = 1'b1;
    end else begin
        rd_zeros_0_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((rd_zeros_1_read_read_fu_237_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        rd_zeros_1_o = grp_fu_490_p2;
    end else if (((icmp_ln53_1_fu_706_p2 == 1'd1) & (rd_zeros_1_read_read_fu_237_p2 == 1'd1) & (icmp_ln37_1_fu_700_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        rd_zeros_1_o = 1'd0;
    end else begin
        rd_zeros_1_o = rd_zeros_1_i;
    end
end

always @ (*) begin
    if ((((rd_zeros_1_read_read_fu_237_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln53_1_fu_706_p2 == 1'd1) & (rd_zeros_1_read_read_fu_237_p2 == 1'd1) & (icmp_ln37_1_fu_700_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        rd_zeros_1_o_ap_vld = 1'b1;
    end else begin
        rd_zeros_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((rd_zeros_2_read_read_fu_266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        rd_zeros_2_o = grp_fu_490_p2;
    end else if (((icmp_ln53_2_fu_864_p2 == 1'd1) & (rd_zeros_2_read_read_fu_266_p2 == 1'd1) & (icmp_ln37_2_fu_858_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        rd_zeros_2_o = 1'd0;
    end else begin
        rd_zeros_2_o = rd_zeros_2_i;
    end
end

always @ (*) begin
    if ((((rd_zeros_2_read_read_fu_266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln53_2_fu_864_p2 == 1'd1) & (rd_zeros_2_read_read_fu_266_p2 == 1'd1) & (icmp_ln37_2_fu_858_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        rd_zeros_2_o_ap_vld = 1'b1;
    end else begin
        rd_zeros_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((rd_zeros_3_i == 1'd0) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        rd_zeros_3_o = grp_fu_490_p2;
    end else if (((icmp_ln53_3_fu_1022_p2 == 1'd1) & (rd_zeros_3_read_read_fu_294_p2 == 1'd1) & (icmp_ln37_3_fu_1016_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        rd_zeros_3_o = 1'd0;
    end else begin
        rd_zeros_3_o = rd_zeros_3_i;
    end
end

always @ (*) begin
    if ((((rd_zeros_3_i == 1'd0) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln53_3_fu_1022_p2 == 1'd1) & (rd_zeros_3_read_read_fu_294_p2 == 1'd1) & (icmp_ln37_3_fu_1016_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        rd_zeros_3_o_ap_vld = 1'b1;
    end else begin
        rd_zeros_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (compressed_in_read_read_fu_122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln59_1_fu_728_p2 = ($signed(rd_zero_cnt_1_i) + $signed(32'd4294967295));

assign add_ln59_2_fu_886_p2 = ($signed(rd_zero_cnt_2_i) + $signed(32'd4294967295));

assign add_ln59_3_fu_1044_p2 = ($signed(rd_zero_cnt_3_i) + $signed(32'd4294967295));

assign add_ln59_fu_570_p2 = ($signed(rd_zero_cnt_0_i) + $signed(32'd4294967295));

assign add_ln659_1_fu_771_p2 = ($signed(6'd49) + $signed(zext_ln659_1_fu_767_p1));

assign add_ln659_2_fu_929_p2 = ($signed(6'd49) + $signed(zext_ln659_2_fu_925_p1));

assign add_ln659_3_fu_1086_p2 = ($signed(6'd49) + $signed(zext_ln659_3_fu_1082_p1));

assign add_ln659_fu_613_p2 = ($signed(6'd49) + $signed(zext_ln659_fu_609_p1));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_condition_274 = (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (rd_zeros_0_read_read_fu_208_p2 == 1'd1) & (compressed_in == 1'd1) & (1'b1 == ap_CS_fsm_state1));
end

always @ (*) begin
    ap_condition_786 = ((icmp_ln57_fu_564_p2 == 1'd0) & (icmp_ln53_fu_548_p2 == 1'd0) & (icmp_ln37_fu_542_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_793 = ((icmp_ln57_1_fu_722_p2 == 1'd0) & (icmp_ln53_1_fu_706_p2 == 1'd0) & (icmp_ln37_1_fu_700_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_798 = ((icmp_ln57_2_fu_880_p2 == 1'd0) & (icmp_ln53_2_fu_864_p2 == 1'd0) & (icmp_ln37_2_fu_858_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_803 = ((icmp_ln57_3_fu_1038_p2 == 1'd0) & (icmp_ln53_3_fu_1022_p2 == 1'd0) & (icmp_ln37_3_fu_1016_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op63_hcmp_state1 = ((rd_zeros_0_i == 1'd0) & (compressed_in == 1'd1));
end

assign compressed_in_read_read_fu_122_p2 = compressed_in;

assign icmp_ln37_1_fu_700_p2 = ((rd_zero_cnt_1_i == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln37_2_fu_858_p2 = ((rd_zero_cnt_2_i == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln37_3_fu_1016_p2 = ((rd_zero_cnt_3_i == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln37_fu_542_p2 = ((rd_zero_cnt_0_i == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln53_1_fu_706_p2 = ((rd_zero_cnt_1_i == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln53_2_fu_864_p2 = ((rd_zero_cnt_2_i == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln53_3_fu_1022_p2 = ((rd_zero_cnt_3_i == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_548_p2 = ((rd_zero_cnt_0_i == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln57_1_fu_722_p2 = ((tmp_12_fu_712_p4 == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln57_2_fu_880_p2 = ((tmp_15_fu_870_p4 == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln57_3_fu_1038_p2 = ((tmp_18_fu_1028_p4 == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_564_p2 = ((tmp_7_fu_554_p4 == 31'd0) ? 1'b1 : 1'b0);

assign isNeg_1_fu_777_p3 = add_ln659_1_fu_771_p2[32'd5];

assign isNeg_2_fu_935_p3 = add_ln659_2_fu_929_p2[32'd5];

assign isNeg_3_fu_1092_p3 = add_ln659_3_fu_1086_p2[32'd5];

assign isNeg_fu_619_p3 = add_ln659_fu_613_p2[32'd5];

assign mantissa_V_1_fu_753_p4 = {{{{1'd1}, {tmp_V_3_fu_749_p1}}}, {1'd0}};

assign mantissa_V_2_fu_911_p4 = {{{{1'd1}, {tmp_V_5_fu_907_p1}}}, {1'd0}};

assign mantissa_V_3_fu_1068_p4 = {{{{1'd1}, {tmp_V_7_fu_1064_p1}}}, {1'd0}};

assign mantissa_V_fu_595_p4 = {{{{1'd1}, {tmp_V_1_fu_591_p1}}}, {1'd0}};

assign p_Val2_12_fu_1051_p1 = im_3_data_i;

assign p_Val2_4_fu_735_p1 = in1_TDATA;

assign p_Val2_8_fu_893_p1 = in2_TDATA;

assign p_Val2_s_fu_577_p1 = in0_TDATA;

assign r_V_1_fu_663_p2 = zext_ln682_fu_605_p1 << zext_ln1287_fu_653_p1;

assign r_V_2_fu_815_p2 = mantissa_V_1_fu_753_p4 >> sext_ln1311_5_fu_807_p1;

assign r_V_3_fu_821_p2 = zext_ln682_1_fu_763_p1 << zext_ln1287_1_fu_811_p1;

assign r_V_4_fu_973_p2 = mantissa_V_2_fu_911_p4 >> sext_ln1311_8_fu_965_p1;

assign r_V_5_fu_979_p2 = zext_ln682_2_fu_921_p1 << zext_ln1287_2_fu_969_p1;

assign r_V_6_fu_1130_p2 = mantissa_V_3_fu_1068_p4 >> sext_ln1311_11_fu_1122_p1;

assign r_V_7_fu_1136_p2 = zext_ln682_3_fu_1078_p1 << zext_ln1287_3_fu_1126_p1;

assign r_V_fu_657_p2 = mantissa_V_fu_595_p4 >> sext_ln1311_2_fu_649_p1;

assign rd_zeros_0_read_read_fu_208_p2 = rd_zeros_0_i;

assign rd_zeros_1_read_read_fu_237_p2 = rd_zeros_1_i;

assign rd_zeros_2_read_read_fu_266_p2 = rd_zeros_2_i;

assign rd_zeros_3_read_read_fu_294_p2 = rd_zeros_3_i;

assign sext_ln1311_10_fu_1118_p1 = ush_3_fu_1110_p3;

assign sext_ln1311_11_fu_1122_p1 = ush_3_fu_1110_p3;

assign sext_ln1311_1_fu_645_p1 = ush_fu_637_p3;

assign sext_ln1311_2_fu_649_p1 = ush_fu_637_p3;

assign sext_ln1311_3_fu_791_p1 = $signed(sub_ln1311_1_fu_785_p2);

assign sext_ln1311_4_fu_803_p1 = ush_1_fu_795_p3;

assign sext_ln1311_5_fu_807_p1 = ush_1_fu_795_p3;

assign sext_ln1311_6_fu_949_p1 = $signed(sub_ln1311_2_fu_943_p2);

assign sext_ln1311_7_fu_961_p1 = ush_2_fu_953_p3;

assign sext_ln1311_8_fu_965_p1 = ush_2_fu_953_p3;

assign sext_ln1311_9_fu_1106_p1 = $signed(sub_ln1311_3_fu_1100_p2);

assign sext_ln1311_fu_633_p1 = $signed(sub_ln1311_fu_627_p2);

assign sub_ln1311_1_fu_785_p2 = (5'd15 - tmp_V_2_fu_739_p4);

assign sub_ln1311_2_fu_943_p2 = (5'd15 - tmp_V_4_fu_897_p4);

assign sub_ln1311_3_fu_1100_p2 = (5'd15 - tmp_V_6_fu_1054_p4);

assign sub_ln1311_fu_627_p2 = (5'd15 - tmp_V_fu_581_p4);

assign tmp_11_fu_827_p3 = r_V_2_fu_815_p2[32'd11];

assign tmp_12_fu_712_p4 = {{rd_zero_cnt_1_i[31:1]}};

assign tmp_14_fu_985_p3 = r_V_4_fu_973_p2[32'd11];

assign tmp_15_fu_870_p4 = {{rd_zero_cnt_2_i[31:1]}};

assign tmp_17_fu_1142_p3 = r_V_6_fu_1130_p2[32'd11];

assign tmp_18_fu_1028_p4 = {{rd_zero_cnt_3_i[31:1]}};

assign tmp_1_fu_1154_p4 = {{r_V_7_fu_1136_p2[42:11]}};

assign tmp_4_fu_681_p4 = {{r_V_1_fu_663_p2[42:11]}};

assign tmp_5_fu_669_p3 = r_V_fu_657_p2[32'd11];

assign tmp_6_fu_839_p4 = {{r_V_3_fu_821_p2[42:11]}};

assign tmp_7_fu_554_p4 = {{rd_zero_cnt_0_i[31:1]}};

assign tmp_8_fu_997_p4 = {{r_V_5_fu_979_p2[42:11]}};

assign tmp_V_1_fu_591_p1 = p_Val2_s_fu_577_p1[9:0];

assign tmp_V_2_fu_739_p4 = {{p_Val2_4_fu_735_p1[14:10]}};

assign tmp_V_3_fu_749_p1 = p_Val2_4_fu_735_p1[9:0];

assign tmp_V_4_fu_897_p4 = {{p_Val2_8_fu_893_p1[14:10]}};

assign tmp_V_5_fu_907_p1 = p_Val2_8_fu_893_p1[9:0];

assign tmp_V_6_fu_1054_p4 = {{p_Val2_12_fu_1051_p1[14:10]}};

assign tmp_V_7_fu_1064_p1 = p_Val2_12_fu_1051_p1[9:0];

assign tmp_V_fu_581_p4 = {{p_Val2_s_fu_577_p1[14:10]}};

assign ush_1_fu_795_p3 = ((isNeg_1_fu_777_p3[0:0] === 1'b1) ? sext_ln1311_3_fu_791_p1 : add_ln659_1_fu_771_p2);

assign ush_2_fu_953_p3 = ((isNeg_2_fu_935_p3[0:0] === 1'b1) ? sext_ln1311_6_fu_949_p1 : add_ln659_2_fu_929_p2);

assign ush_3_fu_1110_p3 = ((isNeg_3_fu_1092_p3[0:0] === 1'b1) ? sext_ln1311_9_fu_1106_p1 : add_ln659_3_fu_1086_p2);

assign ush_fu_637_p3 = ((isNeg_fu_619_p3[0:0] === 1'b1) ? sext_ln1311_fu_633_p1 : add_ln659_fu_613_p2);

assign val_V_1_fu_849_p3 = ((isNeg_1_fu_777_p3[0:0] === 1'b1) ? zext_ln662_1_fu_835_p1 : tmp_6_fu_839_p4);

assign val_V_2_fu_1007_p3 = ((isNeg_2_fu_935_p3[0:0] === 1'b1) ? zext_ln662_2_fu_993_p1 : tmp_8_fu_997_p4);

assign val_V_3_fu_1164_p3 = ((isNeg_3_fu_1092_p3[0:0] === 1'b1) ? zext_ln662_3_fu_1150_p1 : tmp_1_fu_1154_p4);

assign val_V_fu_691_p3 = ((isNeg_fu_619_p3[0:0] === 1'b1) ? zext_ln662_fu_677_p1 : tmp_4_fu_681_p4);

assign zext_ln1287_1_fu_811_p1 = $unsigned(sext_ln1311_4_fu_803_p1);

assign zext_ln1287_2_fu_969_p1 = $unsigned(sext_ln1311_7_fu_961_p1);

assign zext_ln1287_3_fu_1126_p1 = $unsigned(sext_ln1311_10_fu_1118_p1);

assign zext_ln1287_fu_653_p1 = $unsigned(sext_ln1311_1_fu_645_p1);

assign zext_ln659_1_fu_767_p1 = tmp_V_2_fu_739_p4;

assign zext_ln659_2_fu_925_p1 = tmp_V_4_fu_897_p4;

assign zext_ln659_3_fu_1082_p1 = tmp_V_6_fu_1054_p4;

assign zext_ln659_fu_609_p1 = tmp_V_fu_581_p4;

assign zext_ln662_1_fu_835_p1 = tmp_11_fu_827_p3;

assign zext_ln662_2_fu_993_p1 = tmp_14_fu_985_p3;

assign zext_ln662_3_fu_1150_p1 = tmp_17_fu_1142_p3;

assign zext_ln662_fu_677_p1 = tmp_5_fu_669_p3;

assign zext_ln682_1_fu_763_p1 = mantissa_V_1_fu_753_p4;

assign zext_ln682_2_fu_921_p1 = mantissa_V_2_fu_911_p4;

assign zext_ln682_3_fu_1078_p1 = mantissa_V_3_fu_1068_p4;

assign zext_ln682_fu_605_p1 = mantissa_V_fu_595_p4;

endmodule //read_inputs_Block_p
