// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dataflow_half,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=10.104600,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=100,HLS_SYN_DSP=11,HLS_SYN_FF=12323,HLS_SYN_LUT=43065,HLS_VERSION=2019_2}" *)

module dataflow_half (
        s_axi_CTRL_BUS_AWVALID,
        s_axi_CTRL_BUS_AWREADY,
        s_axi_CTRL_BUS_AWADDR,
        s_axi_CTRL_BUS_WVALID,
        s_axi_CTRL_BUS_WREADY,
        s_axi_CTRL_BUS_WDATA,
        s_axi_CTRL_BUS_WSTRB,
        s_axi_CTRL_BUS_ARVALID,
        s_axi_CTRL_BUS_ARREADY,
        s_axi_CTRL_BUS_ARADDR,
        s_axi_CTRL_BUS_RVALID,
        s_axi_CTRL_BUS_RREADY,
        s_axi_CTRL_BUS_RDATA,
        s_axi_CTRL_BUS_RRESP,
        s_axi_CTRL_BUS_BVALID,
        s_axi_CTRL_BUS_BREADY,
        s_axi_CTRL_BUS_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        in0_TDATA,
        in0_TLAST,
        in1_TDATA,
        in1_TLAST,
        in2_TDATA,
        in2_TLAST,
        in3_TDATA,
        in3_TLAST,
        out0_TDATA,
        out0_TLAST,
        in_wts_TDATA,
        in_wts_TLAST,
        out0_TVALID,
        out0_TREADY,
        in_wts_TVALID,
        in_wts_TREADY,
        in0_TVALID,
        in0_TREADY,
        in1_TVALID,
        in1_TREADY,
        in2_TVALID,
        in2_TREADY,
        in3_TVALID,
        in3_TREADY
);

parameter    C_S_AXI_CTRL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_BUS_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;

parameter C_S_AXI_CTRL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_CTRL_BUS_AWVALID;
output   s_axi_CTRL_BUS_AWREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1:0] s_axi_CTRL_BUS_AWADDR;
input   s_axi_CTRL_BUS_WVALID;
output   s_axi_CTRL_BUS_WREADY;
input  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1:0] s_axi_CTRL_BUS_WDATA;
input  [C_S_AXI_CTRL_BUS_WSTRB_WIDTH - 1:0] s_axi_CTRL_BUS_WSTRB;
input   s_axi_CTRL_BUS_ARVALID;
output   s_axi_CTRL_BUS_ARREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1:0] s_axi_CTRL_BUS_ARADDR;
output   s_axi_CTRL_BUS_RVALID;
input   s_axi_CTRL_BUS_RREADY;
output  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1:0] s_axi_CTRL_BUS_RDATA;
output  [1:0] s_axi_CTRL_BUS_RRESP;
output   s_axi_CTRL_BUS_BVALID;
input   s_axi_CTRL_BUS_BREADY;
output  [1:0] s_axi_CTRL_BUS_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [15:0] in0_TDATA;
input  [0:0] in0_TLAST;
input  [15:0] in1_TDATA;
input  [0:0] in1_TLAST;
input  [15:0] in2_TDATA;
input  [0:0] in2_TLAST;
input  [15:0] in3_TDATA;
input  [0:0] in3_TLAST;
output  [15:0] out0_TDATA;
output  [0:0] out0_TLAST;
input  [15:0] in_wts_TDATA;
input  [0:0] in_wts_TLAST;
output   out0_TVALID;
input   out0_TREADY;
input   in_wts_TVALID;
output   in_wts_TREADY;
input   in0_TVALID;
output   in0_TREADY;
input   in1_TVALID;
output   in1_TREADY;
input   in2_TVALID;
output   in2_TREADY;
input   in3_TVALID;
output   in3_TREADY;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire   [31:0] width;
wire   [31:0] height;
wire   [31:0] num_sets;
wire    compressed_in;
wire    compressed_out;
wire    Block_proc34_U0_ap_start;
wire    Block_proc34_U0_ap_done;
wire    Block_proc34_U0_ap_continue;
wire    Block_proc34_U0_ap_idle;
wire    Block_proc34_U0_ap_ready;
wire   [15:0] Block_proc34_U0_out0_TDATA;
wire    Block_proc34_U0_out0_TVALID;
wire   [0:0] Block_proc34_U0_out0_TLAST;
wire    Block_proc34_U0_in_wts_TREADY;
wire    Block_proc34_U0_in0_TREADY;
wire    Block_proc34_U0_in1_TREADY;
wire    Block_proc34_U0_in2_TREADY;
wire    Block_proc34_U0_in3_TREADY;
wire   [0:0] Block_proc34_U0_compressed_out;
wire   [0:0] Block_proc34_U0_compressed_in;
wire    ap_sync_continue;
wire    ap_sync_done;
wire    ap_sync_ready;
wire    Block_proc34_U0_start_full_n;
wire    Block_proc34_U0_start_write;

dataflow_half_CTRL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_BUS_DATA_WIDTH ))
dataflow_half_CTRL_BUS_s_axi_U(
    .AWVALID(s_axi_CTRL_BUS_AWVALID),
    .AWREADY(s_axi_CTRL_BUS_AWREADY),
    .AWADDR(s_axi_CTRL_BUS_AWADDR),
    .WVALID(s_axi_CTRL_BUS_WVALID),
    .WREADY(s_axi_CTRL_BUS_WREADY),
    .WDATA(s_axi_CTRL_BUS_WDATA),
    .WSTRB(s_axi_CTRL_BUS_WSTRB),
    .ARVALID(s_axi_CTRL_BUS_ARVALID),
    .ARREADY(s_axi_CTRL_BUS_ARREADY),
    .ARADDR(s_axi_CTRL_BUS_ARADDR),
    .RVALID(s_axi_CTRL_BUS_RVALID),
    .RREADY(s_axi_CTRL_BUS_RREADY),
    .RDATA(s_axi_CTRL_BUS_RDATA),
    .RRESP(s_axi_CTRL_BUS_RRESP),
    .BVALID(s_axi_CTRL_BUS_BVALID),
    .BREADY(s_axi_CTRL_BUS_BREADY),
    .BRESP(s_axi_CTRL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .width(width),
    .height(height),
    .num_sets(num_sets),
    .compressed_in(compressed_in),
    .compressed_out(compressed_out)
);

Block_proc34 Block_proc34_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_proc34_U0_ap_start),
    .ap_done(Block_proc34_U0_ap_done),
    .ap_continue(Block_proc34_U0_ap_continue),
    .ap_idle(Block_proc34_U0_ap_idle),
    .ap_ready(Block_proc34_U0_ap_ready),
    .num_sets(num_sets),
    .width(width),
    .height(height),
    .out0_TDATA(Block_proc34_U0_out0_TDATA),
    .out0_TVALID(Block_proc34_U0_out0_TVALID),
    .out0_TREADY(out0_TREADY),
    .out0_TLAST(Block_proc34_U0_out0_TLAST),
    .in_wts_TDATA(in_wts_TDATA),
    .in_wts_TVALID(in_wts_TVALID),
    .in_wts_TREADY(Block_proc34_U0_in_wts_TREADY),
    .in_wts_TLAST(in_wts_TLAST),
    .in0_TDATA(in0_TDATA),
    .in0_TVALID(in0_TVALID),
    .in0_TREADY(Block_proc34_U0_in0_TREADY),
    .in0_TLAST(in0_TLAST),
    .in1_TDATA(in1_TDATA),
    .in1_TVALID(in1_TVALID),
    .in1_TREADY(Block_proc34_U0_in1_TREADY),
    .in1_TLAST(in1_TLAST),
    .in2_TDATA(in2_TDATA),
    .in2_TVALID(in2_TVALID),
    .in2_TREADY(Block_proc34_U0_in2_TREADY),
    .in2_TLAST(in2_TLAST),
    .in3_TDATA(in3_TDATA),
    .in3_TVALID(in3_TVALID),
    .in3_TREADY(Block_proc34_U0_in3_TREADY),
    .in3_TLAST(in3_TLAST),
    .compressed_out(Block_proc34_U0_compressed_out),
    .compressed_in(Block_proc34_U0_compressed_in)
);

assign Block_proc34_U0_ap_continue = 1'b1;

assign Block_proc34_U0_ap_start = ap_start;

assign Block_proc34_U0_compressed_in = compressed_in;

assign Block_proc34_U0_compressed_out = compressed_out;

assign Block_proc34_U0_start_full_n = 1'b1;

assign Block_proc34_U0_start_write = 1'b0;

assign ap_done = Block_proc34_U0_ap_done;

assign ap_idle = Block_proc34_U0_ap_idle;

assign ap_ready = Block_proc34_U0_ap_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b1;

assign ap_sync_done = Block_proc34_U0_ap_done;

assign ap_sync_ready = Block_proc34_U0_ap_ready;

assign in0_TREADY = Block_proc34_U0_in0_TREADY;

assign in1_TREADY = Block_proc34_U0_in1_TREADY;

assign in2_TREADY = Block_proc34_U0_in2_TREADY;

assign in3_TREADY = Block_proc34_U0_in3_TREADY;

assign in_wts_TREADY = Block_proc34_U0_in_wts_TREADY;

assign out0_TDATA = Block_proc34_U0_out0_TDATA;

assign out0_TLAST = Block_proc34_U0_out0_TLAST;

assign out0_TVALID = Block_proc34_U0_out0_TVALID;

endmodule //dataflow_half
